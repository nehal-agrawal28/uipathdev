@IsTest(isParallel=true)
public class MetadataWrapperCalloutMock implements WebServiceMock 
{
   public void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {

        // Create response element from the autogenerated class.
        // Populate response element.
        // Add response element to the response parameter, as follows:

        System.debug(request);

        if(request instanceof  MetadataService.upsertMetadata_element)
        { 
            MetadataService.upsertMetadataResponse_element result = new MetadataService.upsertMetadataResponse_element();

            result.result = new List<MetadataService.UpsertResult>();

            MetadataService.UpsertResult mur = new MetadataService.UpsertResult();
            mur.success = false;

            MetadataService.Error error = new MetadataService.Error();

            mur.errors = new List<MetadataService.Error>();
            mur.errors.add(error);

            result.result.add(mur);

            response.put('response_x', result); 
        }
        else if(request instanceof MetadataService.listMetadata_element)
        {                 
            response.put('response_x', new MetadataService.listMetadataResponse_element());
        }
        else if(request instanceof  MetadataService.createMetadata_element)
        { 
            MetadataService.createMetadataResponse_element result = new MetadataService.createMetadataResponse_element();

            result.result = new List<MetadataService.SaveResult>();

            MetadataService.SaveResult sr = new MetadataService.SaveResult();
            sr.success = false;

            MetadataService.Error error = new MetadataService.Error();

            sr.errors = new List<MetadataService.Error>();
            sr.errors.add(error);
            sr.fullName = 'Industry__c';

            result.result.add(sr);

            response.put('response_x', result); 
        }
   }
}